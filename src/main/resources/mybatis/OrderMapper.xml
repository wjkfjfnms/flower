<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.flower.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.example.flower.po.Order">
    <!--@mbg.generated-->
    <!--@Table `order`-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="orderNumber" jdbcType="VARCHAR" property="ordernumber" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="userId" jdbcType="BIGINT" property="userid" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="price" jdbcType="FLOAT" property="price" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="overtime" jdbcType="VARCHAR" property="overtime" />
    <result column="deliveryPeopleName" jdbcType="VARCHAR" property="deliveryPeopleName" />
    <result column="deliveryPeoplePhone" jdbcType="VARCHAR" property="deliveryPeoplePhone" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, orderNumber, state, userId, phone, address, price, createtime, overtime,deliveryPeopleName,deliveryPeoplePhone
  </sql>


  <resultMap id="orderMap" type="com.example.flower.vo.OrderVO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="orderNumber" jdbcType="VARCHAR" property="orderNumber" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="price" jdbcType="FLOAT" property="price" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="overtime" jdbcType="VARCHAR" property="overtime" />
    <result column="deliveryPeopleName" jdbcType="VARCHAR" property="deliveryPeopleName" />
    <result column="deliveryPeoplePhone" jdbcType="VARCHAR" property="deliveryPeoplePhone" />
    <collection property="ordergoodsList" ofType="com.example.flower.po.Ordergoods">
      <result column="goodsName" jdbcType="VARCHAR" property="goodsName" />
      <result column="goodsnum" jdbcType="VARCHAR" property="goodsnum" />
      <result column="goodsprice" jdbcType="VARCHAR" property="goodsprice" />
    </collection>
  </resultMap>


  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="orderMap">
    <!--@mbg.generated-->
    select o.id,o.orderNumber,o.state,o.price,o.address,o.phone,o.createtime,o.overtime,o.deliveryPeopleName,o.deliveryPeoplePhone,
    o.name,og.goodsName,goodsNum,og.goodsPrice
    from order o
    join ordergoods og on o.id = og.orderId
    where id = #{id,jdbcType=BIGINT}
  </select>

<!--  商家分页查询所有订单-->
  <select id="findAllOrder" resultMap="BaseResultMap">
    select o.id,o.orderNumber,o.state,o.price,o.address,o.phone,o.createtime,o.overtime,o.deliveryPeopleName,o.deliveryPeoplePhone,
           o.name,og.goodsName,goodsNum,og.goodsPrice
    from order o
    join ordergoods og on o.id = og.orderId
    order by createtime desc
  </select>

  <!--  分页查询用户所有订单-->
  <select id="findUserOrder" resultMap="BaseResultMap" parameterType="long">
    select *
    from `order`
    where userId = #{userid,jdbcType=BIGINT}
    order by createtime desc
  </select>

  <select id="selectByOrderNumber" parameterType="String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from order
    where orderNumber like CONCAT('%', #{arg0}, '%')
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from `order`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.flower.po.Order">
    <!--@mbg.generated-->
    insert into `order` (id, orderNumber, `state`,
      userId, phone, address,
      price, createtime, overtime
      )
    values (#{id,jdbcType=BIGINT}, #{ordernumber,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER},
      #{userid,jdbcType=BIGINT}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
      #{price,jdbcType=FLOAT}, #{createtime,jdbcType=TIMESTAMP}, #{overtime,jdbcType=TIMESTAMP}
      )
  </insert>

<!--  创建订单-->
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.flower.po.Order" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ordernumber != null">
        orderNumber,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="overtime != null">
        overtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="ordernumber != null">
        #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=FLOAT},
      </if>
      <if test="overtime != null">
        #{overtime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.flower.po.Order">
    <!--@mbg.generated-->
    update `order`
    <set>
      <if test="ordernumber != null">
        orderNumber = #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=FLOAT},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="overtime != null">
        overtime = #{overtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

<!--  为订单分配派送员-->
  <update id="updateByPrimaryKey" parameterType="com.example.flower.po.Order">
    <!--@mbg.generated-->
    update `order`
    set deliveryPeopleName = #{deliveryPeopleName,jdbcType=VARCHAR},
    deliveryPeoplePhone = #{deliveryPeoplePhone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

<!--  修改订单状态-->
  <update id="updateOrderState" parameterType="com.example.flower.dto.UpdateGoodsDTO">
    update order
    set state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>
