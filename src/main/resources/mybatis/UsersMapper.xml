<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.flower.dao.UsersMapper">
  <resultMap id="BaseResultMap" type="com.example.flower.po.Users">
    <!--@mbg.generated-->
    <!--@Table users-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="touxiang" jdbcType="VARCHAR" property="touxiang" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="role" jdbcType="VARCHAR" property="role" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `email`, `nickname`, `password`, sex, phone, touxiang, createtime, role
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from users
    where id = #{id,jdbcType=BIGINT}
  </delete>


<!--  注册-->
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.flower.dto.RegisterDTO" useGeneratedKeys="true">
    insert into users (`email`,  `password`, `salt`,`role`,`state`)
    values (#{email,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR}, #{salt,jdbcType=CHAR},#{role,jdbcType=VARCHAR},0)
  </insert>

  <!--  根据邮箱查询信息-->
  <select id="selectByEmail" parameterType="string" resultType="com.example.flower.vo.userVO">
    select id,email,password,role,nickname
    from users
    where email=#{email} and state = 0
  </select>

  <!--  根据邮箱获取用户信息-->
  <select id="selectDetailsByEmail" parameterType="string" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from users
    where email = #{email,jdbcType=VARCHAR} and state = 0
  </select>

  <sql id="selectAllUserList">
    <!--@mbg.generated-->
    id, nickname,  sex, phone, state, createtime, role
  </sql>

  <resultMap id="selectAllUserMap" type="com.example.flower.vo.userVO">
    <!--@mbg.generated-->
    <!--@Table users-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
<!--  查询全部用户信息-->
  <select id="selectAllUser" resultMap="selectAllUserMap">
    select u.id, r.realname, u.sex, u.phone, u.state, u.createtime, u.role
    from users u
    inner join realinfo r on u.id = r.userId
  </select>

<!--根据姓名查询用户-->
  <select id="selectByname" resultMap="selectAllUserMap" parameterType="string">
    select u.id, r.realname, u.sex, u.phone, u.state, u.createtime, u.role
    from users u
    inner join realinfo r on u.id = r.userId
    where r.realname = #{name,jdbcType=VARCHAR}
  </select>




  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.flower.po.Users" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="email != null">
        `email`,
      </if>
      <if test="nickname != null">
        `nickname`,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="touxiang != null">
        touxiang,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="touxiang != null">
        #{touxiang,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.flower.po.Users">
    <!--@mbg.generated-->
    update users
    <set>
      <if test="email != null">
        `email` = #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        `nickname` = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="touxiang != null">
        touxiang = #{touxiang,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--  修改用户信息-->
  <update id="updateByPrimaryKey" parameterType="com.example.flower.vo.UsersUpdateVO">
    <!--@mbg.generated-->
    update realinfo r
    inner join users u on r.userId = u.id
    <set>
      <if test="realinfo.realname != null and realinfo.realname != ''">
        r.realname = #{realinfo.realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null and sex != ''">
        u.sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null and phone != ''">
        u.phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="role != null and role != ''">
        u.role = #{role,jdbcType=VARCHAR},
      </if>
    </set>
    where r.userId = #{id,jdbcType=BIGINT}
  </update>

<!--  注销账户-->
  <update id="logoutByPrimaryKey" parameterType="int">
    <!--@mbg.generated-->
    update users
    set state = 1
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>
